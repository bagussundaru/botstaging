//@version=5
strategy("🎯 Sniper DAILY TRADER v1.1 - FIXED ($66)", shorttitle="SniperFixed", overlay=true, 
         initial_capital=66, default_qty_type=strategy.percent_of_equity, default_qty_value=10,
         commission_type=strategy.commission.percent, commission_value=0.075,
         slippage=2, calc_on_every_tick=false, calc_on_order_fills=true,
         pyramiding=0, close_entries_rule="ANY", max_bars_back=500)

// =====================================================
// === FIXED VERSION - NO FORWARD BIAS ($66) ===
// =====================================================

// 🎯 CONSERVATIVE PARAMETERS (Fixed from backtest analysis)
group_daily = "🎯 CONSERVATIVE SETTINGS"
confidence_threshold = input.float(0.68, "Confidence Threshold", minval=0.5, maxval=0.8, step=0.02, group=group_daily, tooltip="Higher = Better Quality Signals")
tp_ratio = input.float(1.6, "Take Profit Ratio", minval=1.2, maxval=2.5, step=0.1, group=group_daily, tooltip="Improved R/R Ratio")
risk_per_trade = input.float(1.0, "Risk Per Trade (%)", minval=0.5, maxval=1.5, step=0.1, group=group_daily, tooltip="Ultra Conservative for $66")

// 📊 TIMEFRAME SETTINGS (No Repaint)
group_tf = "📊 TIMEFRAME SETTINGS"
primary_tf = input.timeframe("15", "Primary Timeframe", group=group_tf)
confirm_tf = input.timeframe("60", "Confirmation Timeframe", group=group_tf)
use_htf_confirmation = input.bool(true, "Use Higher TF Confirmation", group=group_tf)

// 🛡️ ULTRA-CONSERVATIVE RISK (Lessons from backtest)
group_risk = "🛡️ ULTRA-CONSERVATIVE RISK"
daily_loss_limit = input.float(4.5, "Daily Loss Limit (%)", minval=3.0, maxval=8.0, step=0.5, group=group_risk, tooltip="Max $3 loss per day")
max_trades_per_day = input.int(5, "Max Trades Per Day", minval=2, maxval=8, step=1, group=group_risk, tooltip="Quality over Quantity")
cooldown_minutes = input.int(45, "Cooldown Between Trades (min)", minval=30, maxval=120, step=15, group=group_risk)

// 🎯 SELECTIVE TRADING HOURS
group_auto = "🤖 SELECTIVE TRADING"
enable_automation = input.bool(true, "Enable Automation", group=group_auto)
session_filter = input.session("1400-1800", "Trading Session", group=group_auto, tooltip="London-NY Overlap Only")
enable_session_filter = input.bool(true, "Use Session Filter", group=group_auto)

// =====================================================
// === INDICATORS (NO FORWARD BIAS) ===
// =====================================================

// 📈 EMA Settings (Using confirmed bars)
ema_fast = ta.ema(close, 8)
ema_slow = ta.ema(close, 21)
// FIX: Use confirmed bar to prevent repainting
ema_htf = request.security(syminfo.tickerid, confirm_tf, ta.ema(close[1], 21), lookahead=barmerge.lookahead_off)

// 📊 RSI (Using confirmed bars)
rsi = ta.rsi(close, 12)
// FIX: Use confirmed bar to prevent repainting  
rsi_htf = request.security(syminfo.tickerid, confirm_tf, ta.rsi(close[1], 14), lookahead=barmerge.lookahead_off)

// 📏 ATR (Improved for ETHUSDT volatility)
atr = ta.atr(14)
atr_multiplier = 2.3  // Increased from 1.8 for better SL placement

// 📊 Volume Analysis (Using confirmed bars)
// FIX: Use previous bar volume to prevent forward bias
volume_confirmed = volume[1]
volume_ma = ta.sma(volume_confirmed, 10)
volume_ratio = volume_confirmed / volume_ma
high_volume = volume_ratio > 1.4  // Slightly higher threshold

// 💹 VWAP (Intraday Reference)
vwap = ta.vwap(hlc3)
price_vs_vwap = (close - vwap) / vwap * 100

// =====================================================
// === IMPROVED LOGIC (Quality over Quantity) ===
// =====================================================

// 🎯 Strong Trend Detection (Higher threshold)
trend_strength = math.abs(ema_fast - ema_slow) / atr
is_strong_trend = trend_strength > 1.0  // Increased from 0.5
is_weak_trend = trend_strength <= 1.0

// 📊 Momentum Detection (More selective)
momentum_bull = ema_fast > ema_slow and close > ema_fast and close > close[1]
momentum_bear = ema_fast < ema_slow and close < ema_fast and close < close[1]

// 🔍 RSI Conditions (More conservative)
rsi_oversold = rsi < 30  // More extreme
rsi_overbought = rsi > 70  // More extreme
rsi_neutral = rsi >= 35 and rsi <= 65

// =====================================================
// === MULTI-CONFIRMATION SYSTEM ===
// =====================================================

// 🎯 Confirmation Scoring (Minimum 3 required)
confirmations_bull = 0
confirmations_bear = 0

// Trend Confirmation
if momentum_bull and is_strong_trend
    confirmations_bull := confirmations_bull + 1
if momentum_bear and is_strong_trend
    confirmations_bear := confirmations_bear + 1

// RSI Confirmation
if momentum_bull and rsi_oversold
    confirmations_bull := confirmations_bull + 1
if momentum_bear and rsi_overbought
    confirmations_bear := confirmations_bear + 1

// Volume Confirmation
if high_volume
    confirmations_bull := confirmations_bull + 1
    confirmations_bear := confirmations_bear + 1

// VWAP Confirmation
if momentum_bull and close > vwap
    confirmations_bull := confirmations_bull + 1
if momentum_bear and close < vwap
    confirmations_bear := confirmations_bear + 1

// HTF Confirmation (No repaint)
htf_trend_bull = false
htf_trend_bear = false
if use_htf_confirmation
    htf_trend_bull := ema_htf > ema_htf[1] and rsi_htf < 65
    htf_trend_bear := ema_htf < ema_htf[1] and rsi_htf > 35
    
    if momentum_bull and htf_trend_bull
        confirmations_bull := confirmations_bull + 1
    if momentum_bear and htf_trend_bear
        confirmations_bear := confirmations_bear + 1

// Final Confidence (Stricter calculation)
confidence_bull = confirmations_bull >= 3 ? confirmations_bull / 5.0 : 0.0
confidence_bear = confirmations_bear >= 3 ? confirmations_bear / 5.0 : 0.0

// =====================================================
// === TRADING FILTERS (Enhanced) ===
// =====================================================

// 🕐 Session Filter (London-NY overlap only)
in_session = not enable_session_filter or not na(time(timeframe.period, session_filter))

// 🔄 Enhanced Cooldown
var float last_trade_time = na
time_since_last_trade = time - last_trade_time
cooldown_ok = na(last_trade_time) or (not na(time_since_last_trade) and time_since_last_trade >= cooldown_minutes * 60 * 1000)

// 📊 Daily Trade Counter
var int daily_trades = 0
var int last_day = 0
current_day = dayofweek
if current_day != last_day
    daily_trades := 0
    last_day := current_day

trade_limit_ok = daily_trades < max_trades_per_day

// 💰 Enhanced Daily Loss Protection
var float daily_pnl = 0.0
if current_day != last_day
    daily_pnl := 0.0

daily_loss_ok = daily_pnl > -(strategy.initial_capital * daily_loss_limit / 100)

// 🚨 Emergency Stop (Total loss protection)
total_loss_limit = strategy.netprofit > -10.0  // Max $10 total loss

// =====================================================
// === ENTRY CONDITIONS (Ultra Selective) ===
// =====================================================

// 🎯 Long Entry (Minimum 3 confirmations + quality filters)
long_entry_conditions = (momentum_bull and confidence_bull >= confidence_threshold and 
                         confirmations_bull >= 3 and is_strong_trend and in_session and 
                         cooldown_ok and trade_limit_ok and daily_loss_ok and 
                         total_loss_limit and strategy.position_size == 0 and 
                         barstate.isconfirmed)  // Wait for bar close

// 🎯 Short Entry (Minimum 3 confirmations + quality filters)
short_entry_conditions = (momentum_bear and confidence_bear >= confidence_threshold and 
                          confirmations_bear >= 3 and is_strong_trend and in_session and 
                          cooldown_ok and trade_limit_ok and daily_loss_ok and 
                          total_loss_limit and strategy.position_size == 0 and 
                          barstate.isconfirmed)  // Wait for bar close

// =====================================================
// === CONSERVATIVE POSITION SIZING ===
// =====================================================

// 💰 Ultra-Conservative Sizing
account_balance = strategy.initial_capital + strategy.netprofit
risk_amount = account_balance * risk_per_trade / 100
stop_distance = atr * atr_multiplier
position_size = risk_amount / stop_distance

// Enhanced minimum checks
min_position = 0.001
max_position = account_balance * 0.05 / close  // Max 5% of account
final_position_size = math.min(math.max(position_size, min_position), max_position)

// =====================================================
// === TRADE EXECUTION ===
// =====================================================

// 📈 Long Entry
if long_entry_conditions
    strategy.entry("LONG", strategy.long, qty=final_position_size)
    last_trade_time := time
    daily_trades := daily_trades + 1

// 📉 Short Entry
if short_entry_conditions
    strategy.entry("SHORT", strategy.short, qty=final_position_size)
    last_trade_time := time
    daily_trades := daily_trades + 1

// =====================================================
// === IMPROVED EXIT STRATEGY ===
// =====================================================

// 🎯 Enhanced TP/SL (Better R/R ratio)
if strategy.position_size > 0  // Long position
    tp_distance = atr * atr_multiplier * tp_ratio
    sl_distance = atr * atr_multiplier
    
    tp_price = strategy.position_avg_price + tp_distance
    sl_price = strategy.position_avg_price - sl_distance
    
    strategy.exit("TP/SL LONG", "LONG", limit=tp_price, stop=sl_price)

if strategy.position_size < 0  // Short position
    tp_distance = atr * atr_multiplier * tp_ratio
    sl_distance = atr * atr_multiplier
    
    tp_price = strategy.position_avg_price - tp_distance
    sl_price = strategy.position_avg_price + sl_distance
    
    strategy.exit("TP/SL SHORT", "SHORT", limit=tp_price, stop=sl_price)

// 🚨 Emergency Exits
if not daily_loss_ok and strategy.position_size != 0
    strategy.close_all(comment="DAILY LOSS LIMIT")

if not total_loss_limit and strategy.position_size != 0
    strategy.close_all(comment="TOTAL LOSS LIMIT")

// =====================================================
// === VISUALIZATION ===
// =====================================================

// 📊 Key Indicators
plot(ema_fast, "EMA Fast", color=color.blue, linewidth=1)
plot(ema_slow, "EMA Slow", color=color.red, linewidth=1)
plot(ema_htf, "EMA HTF", color=color.orange, linewidth=2)
plot(vwap, "VWAP", color=color.purple, linewidth=1)

// 🎯 High Quality Signals Only
plotshape(long_entry_conditions, title="🚀 HIGH QUALITY LONG", location=location.belowbar, color=color.lime, style=shape.triangleup, size=size.normal)
plotshape(short_entry_conditions, title="🔻 HIGH QUALITY SHORT", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.normal)

// 📊 Enhanced Info Table
if barstate.islast
    var table info_table = table.new(position.top_right, 2, 7, bgcolor=color.white, border_width=1)
    
    table.cell(info_table, 0, 0, "Daily Trades", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 0, str.tostring(daily_trades) + "/" + str.tostring(max_trades_per_day), text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 1, "Confidence", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 1, str.tostring(math.max(confidence_bull, confidence_bear), "#.##"), text_color=confidence_bull >= confidence_threshold or confidence_bear >= confidence_threshold ? color.green : color.red, text_size=size.small)
    
    table.cell(info_table, 0, 2, "Confirmations", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 2, str.tostring(math.max(confirmations_bull, confirmations_bear)), text_color=math.max(confirmations_bull, confirmations_bear) >= 3 ? color.green : color.red, text_size=size.small)
    
    table.cell(info_table, 0, 3, "Daily P&L", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 3, "$" + str.tostring(daily_pnl, "#.##"), text_color=daily_pnl >= 0 ? color.green : color.red, text_size=size.small)
    
    table.cell(info_table, 0, 4, "Risk/Trade", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 4, str.tostring(risk_per_trade) + "%", text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 5, "Session", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 5, in_session ? "ACTIVE" : "CLOSED", text_color=in_session ? color.green : color.red, text_size=size.small)
    
    table.cell(info_table, 0, 6, "Trend", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 6, is_strong_trend ? "STRONG" : "WEAK", text_color=is_strong_trend ? color.green : color.red, text_size=size.small)

// =====================================================
// === AUTOMATION ALERTS (Fixed) ===
// =====================================================

// 🚀 High Quality Long Alert
alertcondition(long_entry_conditions, title="🚀 HQ LONG Entry", 
               message='{"action": "BUY", "symbol": "{{ticker}}", "exchange": "bybit", "price": {{close}}, "timestamp": "{{time}}", "strategy": "Daily Trader v1.1 FIXED", "timeframe": "{{interval}}", "confirmations": "HIGH_QUALITY", "token": "sniper-bybit-production-2024"}')

// 🔻 High Quality Short Alert
alertcondition(short_entry_conditions, title="🔻 HQ SHORT Entry", 
               message='{"action": "SELL", "symbol": "{{ticker}}", "exchange": "bybit", "price": {{close}}, "timestamp": "{{time}}", "strategy": "Daily Trader v1.1 FIXED", "timeframe": "{{interval}}", "confirmations": "HIGH_QUALITY", "token": "sniper-bybit-production-2024"}')

// =====================================================
// === PERFORMANCE TRACKING ===
// =====================================================

// Update daily P&L (Fixed calculation)
if strategy.closedtrades > strategy.closedtrades[1]
    last_trade_pnl = strategy.closedtrades.exit_price(strategy.closedtrades - 1) - strategy.closedtrades.entry_price(strategy.closedtrades - 1)
    if strategy.closedtrades.size(strategy.closedtrades - 1) < 0  // Short trade
        last_trade_pnl := -last_trade_pnl
    daily_pnl := daily_pnl + (last_trade_pnl * strategy.closedtrades.size(strategy.closedtrades - 1))

// =====================================================
// === END OF FIXED DAILY TRADER v1.1 ===
// =====================================================