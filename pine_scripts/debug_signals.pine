//@version=5
indicator("🔍 Signal Debug - Sniper Analysis", shorttitle="Debug", overlay=false)

// Import same parameters as main indicator
min_confidence = input.float(0.28, "Minimum Confidence Threshold")
ema_fast_len = input.int(9, "EMA Fast Length")
ema_slow_len = input.int(21, "EMA Slow Length")
rsi_len = input.int(9, "RSI Length")
bb_len = input.int(20, "Bollinger Bands Length")
bb_mult = input.float(2.0, "BB Multiplier")
atr_multiplier = input.float(2.2, "ATR Multiplier")

// Basic calculations
ema_fast = ta.ema(close, ema_fast_len)
ema_slow = ta.ema(close, ema_slow_len)
ema_htf = request.security(syminfo.tickerid, "60", ta.ema(close, 21))
rsi = ta.rsi(close, rsi_len)
[bb_basis, bb_upper, bb_lower] = ta.bb(close, bb_len, bb_mult)
atr = ta.atr(14)
atr_ma = ta.sma(atr, 20)
volume_ma = ta.sma(volume, 20)

// Trend analysis
is_uptrend = ema_fast > ema_slow and close > ema_fast
is_downtrend = ema_fast < ema_slow and close < ema_fast
htf_uptrend = close > ema_htf
htf_downtrend = close < ema_htf

// Volume confirmation
volume_ratio = volume / volume_ma
volume_confirmation = volume_ratio > 1.2

// Momentum signals
rsi_ma = ta.sma(rsi, 5)
rsi_momentum = rsi - rsi_ma
momentum_bull_signals = (rsi > 50 ? 1 : 0) + (rsi_momentum > 0 ? 1 : 0) + (close > bb_basis ? 1 : 0) + (close > ta.vwap ? 1 : 0)
momentum_bear_signals = (rsi < 50 ? 1 : 0) + (rsi_momentum < 0 ? 1 : 0) + (close < bb_basis ? 1 : 0) + (close < ta.vwap ? 1 : 0)

// Confidence calculation (simplified)
trend_score_bull = 0.0
trend_score_bear = 0.0
if is_uptrend
    trend_score_bull += 0.4
if htf_uptrend
    trend_score_bull += 0.6
if is_downtrend
    trend_score_bear += 0.4
if htf_downtrend
    trend_score_bear += 0.6

momentum_score_bull = momentum_bull_signals / 4.0
momentum_score_bear = momentum_bear_signals / 4.0

// Simplified confidence (focusing on main components)
confidence_bull = (trend_score_bull * 0.50) + (momentum_score_bull * 0.50)
confidence_bear = (trend_score_bear * 0.50) + (momentum_score_bear * 0.50)

// Safeguards
safeguard_1 = confidence_bull >= min_confidence or confidence_bear >= min_confidence
safeguard_2 = volume_confirmation
safeguard_3 = atr > atr_ma * 0.5
safeguard_4 = not (rsi > 80 or rsi < 20)
all_safeguards_pass = safeguard_1 and safeguard_2 and safeguard_3 and safeguard_4

// Entry conditions
can_enter_long = confidence_bull >= min_confidence and is_uptrend and close > ta.vwap and rsi < 70 and all_safeguards_pass
can_enter_short = confidence_bear >= min_confidence and is_downtrend and close < ta.vwap and rsi > 30 and all_safeguards_pass

// Plot debug values
plot(confidence_bull, "Bull Confidence", color=color.green, linewidth=2)
plot(confidence_bear, "Bear Confidence", color=color.red, linewidth=2)
plot(min_confidence, "Min Confidence", color=color.yellow, linewidth=1)
plot(volume_ratio, "Volume Ratio", color=color.blue)
plot(rsi / 100, "RSI (scaled)", color=color.purple)

// Plot safeguards
plot(safeguard_1 ? 0.1 : 0, "Safeguard 1", color=color.lime, style=plot.style_histogram)
plot(safeguard_2 ? 0.08 : 0, "Safeguard 2", color=color.orange, style=plot.style_histogram)
plot(safeguard_3 ? 0.06 : 0, "Safeguard 3", color=color.aqua, style=plot.style_histogram)
plot(safeguard_4 ? 0.04 : 0, "Safeguard 4", color=color.gray, style=plot.style_histogram)

// Plot signals
plot(can_enter_long ? 0.5 : 0, "Long Signal", color=color.green, style=plot.style_columns)
plot(can_enter_short ? -0.5 : 0, "Short Signal", color=color.red, style=plot.style_columns)

// Background colors for trend
bgcolor(is_uptrend ? color.new(color.green, 95) : is_downtrend ? color.new(color.red, 95) : na)